{"version":3,"sources":["App.js","components/Table/Table.js","reportWebVitals.js","index.js","logo.svg"],"names":["App","useState","flights","setFlights","avgTime","setAvgTime","busiestDay","setBusiestDay","businessPercentage","setBusinessPercentage","percentageFlights","setPercentageFlights","percentageFlightsDest","setPercentageFlightsDest","busiestAirportObj","setBusiestAirportObj","buttonDisabled","setButtonDisabled","from","setFrom","to","setTo","iata","setIata","busiestAirport","a","axios","get","global","BASE_URL","result","busiestAirportDay","toUpperCase","percentageFlightsTo","proportionBusinessClass","avgJourneyTime","checkFlights","getIata","callAll","then","resFlights","data","resAvg","averagetime","resBusyDay","resBusClass","percentage","toFixed","resPercFlightsTo","percentagetotalflights","destair","resBusAir","useEffect","resIata","className","value","onChange","e","target","map","el","disabled","onClick","length","depair","moment","utc","duration","asMilliseconds","format","date","style","fontSize","count","Table","props","outdur","outjourneytime","outhours","Math","floor","asHours","outresult","asMinutes","indur","injourneytime","inhours","inresult","carrier","outdepartutc","outarrivaltime","concat","outarrivaldate","outflightclass","indepartcode","indeparttime","indepartdate","inarrivaltime","inarrivaldate","inflightclass","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26fac152.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport Table from \"./components/Table/Table\";\r\nimport moment from \"moment\";\r\n\r\nexport default function App() {\r\n  const [flights, setFlights] = useState([]);\r\n  const [avgTime, setAvgTime] = useState(null);\r\n  const [busiestDay, setBusiestDay] = useState();\r\n  const [businessPercentage, setBusinessPercentage] = useState(null);\r\n  const [percentageFlights, setPercentageFlights] = useState(null);\r\n  const [percentageFlightsDest, setPercentageFlightsDest] = useState(\"DXB\");\r\n  const [busiestAirportObj, setBusiestAirportObj] = useState();\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n  const [from, setFrom] = useState(\"LHR\");\r\n  const [to, setTo] = useState(\"DXB\");\r\n  const [iata, setIata] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n\r\n  const busiestAirport = async () => {\r\n    let result = await axios.get(\r\n      `${global.BASE_URL}/api/flights/busiest-airport`\r\n    );\r\n    return result;\r\n  };\r\n\r\n  const busiestAirportDay = async () => {\r\n    let result = await axios.get(\r\n      `${global.BASE_URL}/api/flights/busiest-day/${from.toUpperCase()}`\r\n    );\r\n    return result;\r\n  };\r\n\r\n  const percentageFlightsTo = async () => {\r\n    let result = await axios.get(\r\n      `${global.BASE_URL}/api/flights/percentage-of-flights/${to.toUpperCase()}`\r\n    );\r\n    return result;\r\n  };\r\n\r\n  const proportionBusinessClass = async () => {\r\n    let result = await axios.get(\r\n      `${\r\n        global.BASE_URL\r\n      }/api/flights/proportion-business-class/${from.toUpperCase()}/${to.toUpperCase()}`\r\n    );\r\n    return result;\r\n  };\r\n\r\n  const avgJourneyTime = async () => {\r\n    let result = await axios.get(\r\n      `${\r\n        global.BASE_URL\r\n      }/api/flights/average-journey-time/${from.toUpperCase()}/${to.toUpperCase()}`\r\n    );\r\n\r\n    return result;\r\n  };\r\n\r\n  const checkFlights = async () => {\r\n    let result = await axios.get(\r\n      `${\r\n        global.BASE_URL\r\n      }/api/flights/travel-time/${from.toUpperCase()}/${to.toUpperCase()}`\r\n    );\r\n    return result;\r\n  };\r\n\r\n  const getIata = async () => {\r\n    let result = await axios.get(`${global.BASE_URL}/api/flights/iata`);\r\n\r\n    return result;\r\n  };\r\n\r\n  const callAll = () => {\r\n    setFlights([]);\r\n    setAvgTime(null);\r\n    setBusiestDay();\r\n    setBusinessPercentage(null);\r\n    setPercentageFlights(null);\r\n    setBusiestAirportObj();\r\n    setButtonDisabled(true);\r\n\r\n    checkFlights().then((resFlights) => {\r\n      setFlights(resFlights.data);\r\n\r\n      avgJourneyTime().then((resAvg) => {\r\n        setAvgTime(resAvg.data.averagetime);\r\n        busiestAirportDay().then((resBusyDay) => {\r\n          setBusiestDay(resBusyDay.data);\r\n\r\n          proportionBusinessClass().then((resBusClass) => {\r\n            if (resBusClass.data.percentage % 1 !== 0) {\r\n              setBusinessPercentage(resBusClass.data.percentage.toFixed(2));\r\n            } else if (resBusClass.data.percentage !== null)\r\n              setBusinessPercentage(resBusClass.data.percentage.toFixed(0));\r\n\r\n            percentageFlightsTo().then((resPercFlightsTo) => {\r\n              if (resPercFlightsTo.data.percentagetotalflights % 1 !== 0) {\r\n                setPercentageFlights(\r\n                  resPercFlightsTo.data.percentagetotalflights.toFixed(2)\r\n                );\r\n              } else\r\n                setPercentageFlights(\r\n                  resPercFlightsTo.data.percentagetotalflights.toFixed(0)\r\n                );\r\n              setPercentageFlightsDest(resPercFlightsTo.data.destair);\r\n\r\n              busiestAirport().then((resBusAir) => {\r\n                setBusiestAirportObj(resBusAir.data);\r\n                setButtonDisabled(false);\r\n              });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getIata().then((resIata) => {\r\n      setIata(resIata.data);\r\n      callAll();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"form\">\r\n          <div className=\"form-group\">\r\n            <label>From</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={from}\r\n              onChange={(e) => setFrom(e.target.value)}\r\n            >\r\n              {iata\r\n                ? iata.map((el) => (\r\n                    <option key={el} value={el}>\r\n                      {el}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label>To</label>\r\n            <select\r\n              className=\"custom-select\"\r\n              value={to}\r\n              onChange={(e) => setTo(e.target.value)}\r\n            >\r\n              {iata\r\n                ? iata.map((el) => (\r\n                    <option key={el} value={el}>\r\n                      {el}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-lg\"\r\n          disabled={buttonDisabled}\r\n          onClick={callAll}\r\n        >\r\n          {buttonDisabled ? \"LOADING\" : \"FIND FLIGHTS\"}\r\n        </button>\r\n        {avgTime !== null && flights.length ? (\r\n          <h4>\r\n            1. Average journey time from {flights[0].depair} to{\" \"}\r\n            {flights[0].destair} is{\" \"}\r\n            {moment\r\n              .utc(moment.duration(avgTime, \"minutes\").asMilliseconds())\r\n              .format(\"HH:mm\")}\r\n          </h4>\r\n        ) : (\r\n          <h4>1. Loading...</h4>\r\n        )}\r\n        {busiestDay && flights.length ? (\r\n          <h4>\r\n            2. {busiestDay.date} has the most departures from{\" \"}\r\n            {busiestDay.depair}\r\n            <b style={{ fontSize: \"1.3em\" }}> - {busiestDay.count}</b>\r\n          </h4>\r\n        ) : (\r\n          <h4>2. Loading...</h4>\r\n        )}\r\n        {businessPercentage !== null && flights.length ? (\r\n          <h4>\r\n            3. <b style={{ fontSize: \"1.3em\" }}>{businessPercentage}%</b> of\r\n            flights in this search are business class\r\n          </h4>\r\n        ) : (\r\n          <h4>3. Loading...</h4>\r\n        )}\r\n        {percentageFlights !== null ? (\r\n          <h4>\r\n            4. From a total set of flights{\" \"}\r\n            <b style={{ fontSize: \"1.3em\" }}>{percentageFlights}%</b> flies to{\" \"}\r\n            {percentageFlightsDest}\r\n          </h4>\r\n        ) : (\r\n          <h4>4. Loading...</h4>\r\n        )}\r\n        {busiestAirportObj ? (\r\n          <h4>\r\n            5. Busiest airport from a total set is{\" \"}\r\n            <b style={{ fontSize: \"1.3em\" }}>{busiestAirportObj.depair}</b> with\r\n            a total of{\" \"}\r\n            <b style={{ fontSize: \"1.3em\" }}>{busiestAirportObj.count}</b>{\" \"}\r\n            flights\r\n          </h4>\r\n        ) : (\r\n          <h4>5. Loading...</h4>\r\n        )}\r\n\r\n        {flights.length > 0 ? (\r\n          <Table data={flights} />\r\n        ) : (\r\n          <h3>Sorry, nothing was found for this search. :(</h3>\r\n        )}\r\n\r\n        {/* <p>carrier - departure - destination - depart date/time</p>\r\n        {flights\r\n          ? flights.map((el) => (\r\n              <p>\r\n                {el.carrier} - {el.depair} - {el.destair} - {el.outdepartdate}{\" \"}\r\n                {el.outdeparttime}\r\n              </p>\r\n            ))\r\n          : null} */}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./table.css\";\r\nimport moment from \"moment\";\r\n\r\nfunction getTimeFromMins(mins) {\r\n  // do not include the first validation check if you want, for example,\r\n  // getTimeFromMins(1530) to equal getTimeFromMins(90) (i.e. mins rollover)\r\n  if (mins >= 24 * 60 || mins < 0) {\r\n    throw new RangeError(\r\n      \"Valid input should be greater than or equal to 0 and less than 1440.\"\r\n    );\r\n  }\r\n  var h = mins / 60,\r\n    m = mins % 60;\r\n  return moment.utc().hours(h).minutes(m).format(\"hh:mm\");\r\n}\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* Thank You :) I know this div table is probably not something \"incredible\" but I didn't want to use\r\nany packages in making this table. If it matters I have experience with react-bootstrap-table-next and all it's\r\nadvanced features. Thank you for attention\r\n*/\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\n/* ATTENTION */\r\nexport default function Table(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"divTable\">\r\n        <div className=\"divTableHeading\">\r\n          <div className=\"divTableRow\">\r\n            <div className=\"divTableHead\">Carrier</div>\r\n            <div className=\"divTableHead\">DepartureAir</div>\r\n            <div className=\"divTableHead\">Destination</div>\r\n            <div className=\"divTableHead\">Depart date/time</div>\r\n            <div className=\"divTableHead\">Arrival date/time</div>\r\n            <div className=\"divTableHead\">Flight duration</div>\r\n            <div className=\"divTableHead\">Out flight class</div>\r\n            <div className=\"divTableHead\">ReturnAir</div>\r\n            <div className=\"divTableHead\">Rtrn depart date/time</div>\r\n            <div className=\"divTableHead\">Rtrn arrival date/time</div>\r\n            <div className=\"divTableHead\">Rtrn flight duration</div>\r\n            <div className=\"divTableHead\">Rtrn flight class</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"divTableBody\">\r\n          {props.data ? (\r\n            props.data.map((el) => {\r\n              var outdur = moment.duration(el.outjourneytime, \"minutes\");\r\n              var outhours = Math.floor(outdur.asHours());\r\n              var outmins = Math.floor(outdur.asMinutes()) - outhours * 60;\r\n\r\n              var outresult = outhours + \":\" + outmins;\r\n\r\n              var indur = moment.duration(el.injourneytime, \"minutes\");\r\n              var inhours = Math.floor(indur.asHours());\r\n              var inmins = Math.floor(indur.asMinutes()) - inhours * 60;\r\n\r\n              var inresult = inhours + \":\" + inmins;\r\n              return (\r\n                <div className=\"divTableRow\" key={el.id}>\r\n                  <div className=\"divTableCell\">{el.carrier}</div>\r\n                  <div className=\"divTableCell\">{el.depair}</div>\r\n                  <div className=\"divTableCell\">{el.destair}</div>\r\n                  <div className=\"divTableCell\">\r\n                    {moment(el.outdepartutc).format(\"HH:mm:ss DD/MM/YYYY\")}\r\n                  </div>\r\n                  <div className=\"divTableCell\">\r\n                    {moment(\r\n                      el.outarrivaltime.concat(` ${el.outarrivaldate}`)\r\n                    ).format(\"HH:mm:ss DD/MM/YYYY\")}\r\n                  </div>\r\n                  <div className=\"divTableCell\">{outresult}</div>\r\n                  <div className=\"divTableCell\">{el.outflightclass}</div>\r\n                  {el.indepartcode ? (\r\n                    <div className=\"divTableCell\">{el.indepartcode}</div>\r\n                  ) : (\r\n                    <div className=\"divTableCell\">Return Unavailable</div>\r\n                  )}\r\n                  {el.indepartcode ? (\r\n                    <div className=\"divTableCell\">\r\n                      {moment(\r\n                        el.indeparttime.concat(` ${el.indepartdate}`)\r\n                      ).format(\"HH:mm:ss DD/MM/YYYY\")}\r\n                    </div>\r\n                  ) : null}\r\n                  {el.indepartcode ? (\r\n                    <div className=\"divTableCell\">\r\n                      {\" \"}\r\n                      {moment(\r\n                        el.inarrivaltime.concat(` ${el.inarrivaldate}`)\r\n                      ).format(\"HH:mm:ss DD/MM/YYYY\")}\r\n                    </div>\r\n                  ) : null}\r\n                  {el.indepartcode ? (\r\n                    <div className=\"divTableCell\">{inresult}</div>\r\n                  ) : null}\r\n                  {el.indepartcode ? (\r\n                    <div className=\"divTableCell\">{el.inflightclass}</div>\r\n                  ) : null}\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"divTableCell\">\r\n              Sorry, nothing was found for this search.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <p>&nbsp;</p>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nglobal.BASE_URL = \"http://localhost:5001\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";"],"sourceRoot":""}